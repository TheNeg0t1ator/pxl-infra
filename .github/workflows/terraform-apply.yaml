name: 'Terraform Apply Workflow'
on:
  push:
    branches:
      - "trunk"
jobs:
  terraform_validate:
    name: "Check is Terraform code is valid"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.4.2"
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: "Check for Terraform formatting errors"
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: "Initialise Terraform"
        id: init
        run: terraform init -backend=false
      - name: "Validate Terraform code"
        id: validate
        run: terraform validate -no-color
  terraform_plan:
    needs: [terraform_validate]
    name: "Plan Terraform code"
    runs-on: ubuntu-latest
    env:
      TF_PLUGIN_CACHE_DIR: "$GITHUB_WORKSPACE/.terraform.d/plugin-cache"
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.4.2"
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: "Create Terraform plugin cache directory"
        run: mkdir -p $GITHUB_WORKSPACE/.terraform.d/plugin-cache
      - uses: actions/cache@v3
        name: "Cache Terraform plugins"
        with:
          path: $GITHUB_WORKSPACE/.terraform.d/plugin-cache
          key: ${{ runner.os }}-tf-${{ hashFiles('$GITHUB_WORKSPACE/.terraform.d/plugin-cache') }}
      - name: "Initialise Terraform"
        id: init
        run: terraform init
      - name: "Generate Terraform plan"
        id: plan
        run: terraform plan -no-color
        continue-on-error: false
  terraform_apply:
    needs: [terraform_plan]
    name: "Apply Terraform code"
    runs-on: ubuntu-latest
    env:
      TF_PLUGIN_CACHE_DIR: "$GITHUB_WORKSPACE/.terraform.d/plugin-cache"
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.4.2"
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: "Create Terraform plugin cache directory"
        run: mkdir -p $GITHUB_WORKSPACE/.terraform.d/plugin-cache
      - uses: actions/cache@v3
        name: "Cache Terraform plugins"
        with:
          path: $GITHUB_WORKSPACE/.terraform.d/plugin-cache
          key: ${{ runner.os }}-tf-${{ hashFiles('$GITHUB_WORKSPACE/.terraform.d/plugin-cache') }}
      - name: "Initialise Terraform"
        id: init
        run: terraform init
      - name: "Apply Terraform code"
        id: apply
        run: terraform apply -no-color -auto-approve -input=false
        continue-on-error: false
